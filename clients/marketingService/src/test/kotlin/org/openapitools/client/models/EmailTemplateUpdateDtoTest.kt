/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.EmailTemplateUpdateDto

class EmailTemplateUpdateDtoTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of EmailTemplateUpdateDto
        //val modelInstance = EmailTemplateUpdateDto()

        // to test the property `order`
        should("test order") {
            // uncomment below to test the property
            //modelInstance.order shouldBe ("TODO")
        }

        // to test the property `slug`
        should("test slug") {
            // uncomment below to test the property
            //modelInstance.slug shouldBe ("TODO")
        }

        // to test the property `name`
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `title`
        should("test title") {
            // uncomment below to test the property
            //modelInstance.title shouldBe ("TODO")
        }

        // to test the property `excerpt`
        should("test excerpt") {
            // uncomment below to test the property
            //modelInstance.excerpt shouldBe ("TODO")
        }

        // to test the property `password`
        should("test password") {
            // uncomment below to test the property
            //modelInstance.password shouldBe ("TODO")
        }

        // to test the property `description`
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `highlightImage`
        should("test highlightImage") {
            // uncomment below to test the property
            //modelInstance.highlightImage shouldBe ("TODO")
        }

        // to test the property `canonicalUrl`
        should("test canonicalUrl") {
            // uncomment below to test the property
            //modelInstance.canonicalUrl shouldBe ("TODO")
        }

        // to test the property `seoTitle`
        should("test seoTitle") {
            // uncomment below to test the property
            //modelInstance.seoTitle shouldBe ("TODO")
        }

        // to test the property `seoKeyWords`
        should("test seoKeyWords") {
            // uncomment below to test the property
            //modelInstance.seoKeyWords shouldBe ("TODO")
        }

        // to test the property `seoKeyPhrases`
        should("test seoKeyPhrases") {
            // uncomment below to test the property
            //modelInstance.seoKeyPhrases shouldBe ("TODO")
        }

        // to test the property `metaDescription`
        should("test metaDescription") {
            // uncomment below to test the property
            //modelInstance.metaDescription shouldBe ("TODO")
        }

        // to test the property `twitterImage`
        should("test twitterImage") {
            // uncomment below to test the property
            //modelInstance.twitterImage shouldBe ("TODO")
        }

        // to test the property `twitterTitle`
        should("test twitterTitle") {
            // uncomment below to test the property
            //modelInstance.twitterTitle shouldBe ("TODO")
        }

        // to test the property `twitterDescription`
        should("test twitterDescription") {
            // uncomment below to test the property
            //modelInstance.twitterDescription shouldBe ("TODO")
        }

        // to test the property `facebookImage`
        should("test facebookImage") {
            // uncomment below to test the property
            //modelInstance.facebookImage shouldBe ("TODO")
        }

        // to test the property `facebookTitle`
        should("test facebookTitle") {
            // uncomment below to test the property
            //modelInstance.facebookTitle shouldBe ("TODO")
        }

        // to test the property `facebookDescription`
        should("test facebookDescription") {
            // uncomment below to test the property
            //modelInstance.facebookDescription shouldBe ("TODO")
        }

        // to test the property `featuredImageURL`
        should("test featuredImageURL") {
            // uncomment below to test the property
            //modelInstance.featuredImageURL shouldBe ("TODO")
        }

        // to test the property `content`
        should("test content") {
            // uncomment below to test the property
            //modelInstance.content shouldBe ("TODO")
        }

        // to test the property `code`
        should("test code") {
            // uncomment below to test the property
            //modelInstance.code shouldBe ("TODO")
        }

        // to test the property `namespace`
        should("test namespace") {
            // uncomment below to test the property
            //modelInstance.namespace shouldBe ("TODO")
        }

        // to test the property `typeName`
        should("test typeName") {
            // uncomment below to test the property
            //modelInstance.typeName shouldBe ("TODO")
        }

        // to test the property `generatedCode`
        should("test generatedCode") {
            // uncomment below to test the property
            //modelInstance.generatedCode shouldBe ("TODO")
        }

        // to test the property `compilationPath`
        should("test compilationPath") {
            // uncomment below to test the property
            //modelInstance.compilationPath shouldBe ("TODO")
        }

        // to test the property `htmlContent`
        should("test htmlContent") {
            // uncomment below to test the property
            //modelInstance.htmlContent shouldBe ("TODO")
        }

        // to test the property `cSharpContent`
        should("test cSharpContent") {
            // uncomment below to test the property
            //modelInstance.cSharpContent shouldBe ("TODO")
        }

        // to test the property `razorContent`
        should("test razorContent") {
            // uncomment below to test the property
            //modelInstance.razorContent shouldBe ("TODO")
        }

        // to test the property `cssContent`
        should("test cssContent") {
            // uncomment below to test the property
            //modelInstance.cssContent shouldBe ("TODO")
        }

        // to test the property `jsContent`
        should("test jsContent") {
            // uncomment below to test the property
            //modelInstance.jsContent shouldBe ("TODO")
        }

        // to test the property `cssFiles`
        should("test cssFiles") {
            // uncomment below to test the property
            //modelInstance.cssFiles shouldBe ("TODO")
        }

        // to test the property `jsFiles`
        should("test jsFiles") {
            // uncomment below to test the property
            //modelInstance.jsFiles shouldBe ("TODO")
        }

        // to test the property `razorGeneratedCode`
        should("test razorGeneratedCode") {
            // uncomment below to test the property
            //modelInstance.razorGeneratedCode shouldBe ("TODO")
        }

        // to test the property `cSharpGeneratedCode`
        should("test cSharpGeneratedCode") {
            // uncomment below to test the property
            //modelInstance.cSharpGeneratedCode shouldBe ("TODO")
        }

        // to test the property `precompiledLogicSize`
        should("test precompiledLogicSize") {
            // uncomment below to test the property
            //modelInstance.precompiledLogicSize shouldBe ("TODO")
        }

        // to test the property `precompiledLogicSizeLong`
        should("test precompiledLogicSizeLong") {
            // uncomment below to test the property
            //modelInstance.precompiledLogicSizeLong shouldBe ("TODO")
        }

        // to test the property `precompiledViewSize`
        should("test precompiledViewSize") {
            // uncomment below to test the property
            //modelInstance.precompiledViewSize shouldBe ("TODO")
        }

        // to test the property `precompiledViewSizeLong`
        should("test precompiledViewSizeLong") {
            // uncomment below to test the property
            //modelInstance.precompiledViewSizeLong shouldBe ("TODO")
        }

        // to test the property `precompiledLogicViewSize`
        should("test precompiledLogicViewSize") {
            // uncomment below to test the property
            //modelInstance.precompiledLogicViewSize shouldBe ("TODO")
        }

        // to test the property `template`
        should("test template") {
            // uncomment below to test the property
            //modelInstance.template shouldBe ("TODO")
        }

        // to test the property `default`
        should("test default") {
            // uncomment below to test the property
            //modelInstance.default shouldBe ("TODO")
        }

        // to test the property `enable`
        should("test enable") {
            // uncomment below to test the property
            //modelInstance.enable shouldBe ("TODO")
        }

        // to test the property `enableComments`
        should("test enableComments") {
            // uncomment below to test the property
            //modelInstance.enableComments shouldBe ("TODO")
        }

        // to test the property `displaySocialBox`
        should("test displaySocialBox") {
            // uncomment below to test the property
            //modelInstance.displaySocialBox shouldBe ("TODO")
        }

        // to test the property `published`
        should("test published") {
            // uncomment below to test the property
            //modelInstance.published shouldBe ("TODO")
        }

        // to test the property `inTrashCan`
        should("test inTrashCan") {
            // uncomment below to test the property
            //modelInstance.inTrashCan shouldBe ("TODO")
        }

        // to test the property `systemLocked`
        should("test systemLocked") {
            // uncomment below to test the property
            //modelInstance.systemLocked shouldBe ("TODO")
        }

        // to test the property `allowPingbacks`
        should("test allowPingbacks") {
            // uncomment below to test the property
            //modelInstance.allowPingbacks shouldBe ("TODO")
        }

        // to test the property `allowTrackbacks`
        should("test allowTrackbacks") {
            // uncomment below to test the property
            //modelInstance.allowTrackbacks shouldBe ("TODO")
        }

        // to test the property `cornerstoneContent`
        should("test cornerstoneContent") {
            // uncomment below to test the property
            //modelInstance.cornerstoneContent shouldBe ("TODO")
        }

        // to test the property `isEssentialContent`
        should("test isEssentialContent") {
            // uncomment below to test the property
            //modelInstance.isEssentialContent shouldBe ("TODO")
        }

        // to test the property `allowSearchEngineIndexing`
        should("test allowSearchEngineIndexing") {
            // uncomment below to test the property
            //modelInstance.allowSearchEngineIndexing shouldBe ("TODO")
        }

        // to test the property `marketingCampaignId`
        should("test marketingCampaignId") {
            // uncomment below to test the property
            //modelInstance.marketingCampaignId shouldBe ("TODO")
        }

    }
}

/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.ISwaggerSpec

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param enable 
 * @param active 
 * @param order 
 * @param id 
 * @param name 
 * @param fullName 
 * @param description 
 * @param type 
 * @param configuration 
 * @param author 
 * @param authorUrl 
 * @param license 
 * @param requireLicenseAcceptance 
 * @param repository 
 * @param path 
 * @param icon 
 * @param image 
 * @param nuSpecPath 
 * @param manifest 
 * @param documentation 
 * @param website 
 * @param logo 
 * @param swaggerSpec 
 * @param swaggerSpecs 
 * @param url 
 * @param assemblyPaths 
 * @param markedForDeletion 
 * @param version 
 */


data class Module (

    @Json(name = "enable")
    val enable: kotlin.Boolean? = null,

    @Json(name = "active")
    val active: kotlin.Boolean? = null,

    @Json(name = "order")
    val order: kotlin.Int? = null,

    @Json(name = "id")
    val id: kotlin.String? = null,

    @Json(name = "name")
    val name: kotlin.String? = null,

    @Json(name = "fullName")
    val fullName: kotlin.String? = null,

    @Json(name = "description")
    val description: kotlin.String? = null,

    @Json(name = "type")
    val type: Module.Type? = null,

    @Json(name = "configuration")
    val configuration: kotlin.String? = null,

    @Json(name = "author")
    val author: kotlin.String? = null,

    @Json(name = "authorUrl")
    val authorUrl: kotlin.String? = null,

    @Json(name = "license")
    val license: kotlin.String? = null,

    @Json(name = "requireLicenseAcceptance")
    val requireLicenseAcceptance: kotlin.Boolean? = null,

    @Json(name = "repository")
    val repository: kotlin.String? = null,

    @Json(name = "path")
    val path: kotlin.String? = null,

    @Json(name = "icon")
    val icon: kotlin.String? = null,

    @Json(name = "image")
    val image: kotlin.String? = null,

    @Json(name = "nuSpecPath")
    val nuSpecPath: kotlin.String? = null,

    @Json(name = "manifest")
    val manifest: kotlin.String? = null,

    @Json(name = "documentation")
    val documentation: kotlin.String? = null,

    @Json(name = "website")
    val website: kotlin.String? = null,

    @Json(name = "logo")
    val logo: kotlin.String? = null,

    @Json(name = "swaggerSpec")
    val swaggerSpec: ISwaggerSpec? = null,

    @Json(name = "swaggerSpecs")
    val swaggerSpecs: kotlin.collections.List<ISwaggerSpec>? = null,

    @Json(name = "url")
    val url: kotlin.String? = null,

    @Json(name = "assemblyPaths")
    val assemblyPaths: kotlin.collections.List<kotlin.String>? = null,

    @Json(name = "markedForDeletion")
    val markedForDeletion: kotlin.Boolean? = null,

    @Json(name = "version")
    val version: kotlin.String? = null

) {

    /**
     * 
     *
     * Values: _0,_1,_2,_3
     */
    @JsonClass(generateAdapter = false)
    enum class Type(val value: kotlin.Int) {
        @Json(name = "0") _0(0),
        @Json(name = "1") _1(1),
        @Json(name = "2") _2(2),
        @Json(name = "3") _3(3);
    }

}


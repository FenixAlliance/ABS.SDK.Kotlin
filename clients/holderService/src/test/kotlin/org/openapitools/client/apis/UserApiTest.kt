/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.UserApi
import org.openapitools.client.models.AddressDtoListEnvelope
import org.openapitools.client.models.CartDtoEnvelope
import org.openapitools.client.models.EmptyEnvelope
import org.openapitools.client.models.ErrorEnvelope
import org.openapitools.client.models.ExtendedTenantDtoListEnvelope
import org.openapitools.client.models.ExtendedTenantEnrolmentDtoListEnvelope
import org.openapitools.client.models.ExtendedUserDtoEnvelope
import org.openapitools.client.models.FollowRecordDtoListEnvelope
import org.openapitools.client.models.Int32Envelope
import org.openapitools.client.models.NotificationDtoListEnvelope
import org.openapitools.client.models.Operation
import org.openapitools.client.models.SocialProfileDtoEnvelope
import org.openapitools.client.models.TenantDtoListEnvelope
import org.openapitools.client.models.TenantEnrolmentDtoEnvelope
import org.openapitools.client.models.TenantEnrolmentDtoListEnvelope
import org.openapitools.client.models.TenantInvitationDtoListEnvelope
import org.openapitools.client.models.UserDtoEnvelope
import org.openapitools.client.models.UserSettingsDtoEnvelope
import org.openapitools.client.models.UserSettingsUpdateDto
import org.openapitools.client.models.UserUpdateDto
import org.openapitools.client.models.WalletDtoEnvelope

class UserApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of UserApi
        //val apiInstance = UserApi()

        // to test countCurrentUserFollowersAsync
        should("test countCurrentUserFollowersAsync") {
            // uncomment below to test countCurrentUserFollowersAsync
            //val apiVersion : kotlin.String = apiVersion_example // kotlin.String | 
            //val xApiVersion : kotlin.String = xApiVersion_example // kotlin.String | 
            //val result : Int32Envelope = apiInstance.countCurrentUserFollowersAsync(apiVersion, xApiVersion)
            //result shouldBe ("TODO")
        }

        // to test countCurrentUserFollowsAsync
        should("test countCurrentUserFollowsAsync") {
            // uncomment below to test countCurrentUserFollowsAsync
            //val apiVersion : kotlin.String = apiVersion_example // kotlin.String | 
            //val xApiVersion : kotlin.String = xApiVersion_example // kotlin.String | 
            //val result : Int32Envelope = apiInstance.countCurrentUserFollowsAsync(apiVersion, xApiVersion)
            //result shouldBe ("TODO")
        }

        // to test countCurrentUserNotificationsAsync
        should("test countCurrentUserNotificationsAsync") {
            // uncomment below to test countCurrentUserNotificationsAsync
            //val apiVersion : kotlin.String = apiVersion_example // kotlin.String | 
            //val xApiVersion : kotlin.String = xApiVersion_example // kotlin.String | 
            //val result : Int32Envelope = apiInstance.countCurrentUserNotificationsAsync(apiVersion, xApiVersion)
            //result shouldBe ("TODO")
        }

        // to test countCurrentUserTenantsAsync
        should("test countCurrentUserTenantsAsync") {
            // uncomment below to test countCurrentUserTenantsAsync
            //val apiVersion : kotlin.String = apiVersion_example // kotlin.String | 
            //val xApiVersion : kotlin.String = xApiVersion_example // kotlin.String | 
            //val result : Int32Envelope = apiInstance.countCurrentUserTenantsAsync(apiVersion, xApiVersion)
            //result shouldBe ("TODO")
        }

        // to test getCurrentUserAddressesAsync
        should("test getCurrentUserAddressesAsync") {
            // uncomment below to test getCurrentUserAddressesAsync
            //val apiVersion : kotlin.String = apiVersion_example // kotlin.String | 
            //val xApiVersion : kotlin.String = xApiVersion_example // kotlin.String | 
            //val result : AddressDtoListEnvelope = apiInstance.getCurrentUserAddressesAsync(apiVersion, xApiVersion)
            //result shouldBe ("TODO")
        }

        // to test getCurrentUserAsync
        should("test getCurrentUserAsync") {
            // uncomment below to test getCurrentUserAsync
            //val apiVersion : kotlin.String = apiVersion_example // kotlin.String | 
            //val xApiVersion : kotlin.String = xApiVersion_example // kotlin.String | 
            //val result : UserDtoEnvelope = apiInstance.getCurrentUserAsync(apiVersion, xApiVersion)
            //result shouldBe ("TODO")
        }

        // to test getCurrentUserAvatarAsync
        should("test getCurrentUserAvatarAsync") {
            // uncomment below to test getCurrentUserAvatarAsync
            //val apiVersion : kotlin.String = apiVersion_example // kotlin.String | 
            //val xApiVersion : kotlin.String = xApiVersion_example // kotlin.String | 
            //val result : java.io.File = apiInstance.getCurrentUserAvatarAsync(apiVersion, xApiVersion)
            //result shouldBe ("TODO")
        }

        // to test getCurrentUserCartAsync
        should("test getCurrentUserCartAsync") {
            // uncomment below to test getCurrentUserCartAsync
            //val apiVersion : kotlin.String = apiVersion_example // kotlin.String | 
            //val xApiVersion : kotlin.String = xApiVersion_example // kotlin.String | 
            //val result : CartDtoEnvelope = apiInstance.getCurrentUserCartAsync(apiVersion, xApiVersion)
            //result shouldBe ("TODO")
        }

        // to test getCurrentUserEnrollmentsAsync
        should("test getCurrentUserEnrollmentsAsync") {
            // uncomment below to test getCurrentUserEnrollmentsAsync
            //val apiVersion : kotlin.String = apiVersion_example // kotlin.String | 
            //val xApiVersion : kotlin.String = xApiVersion_example // kotlin.String | 
            //val result : TenantEnrolmentDtoListEnvelope = apiInstance.getCurrentUserEnrollmentsAsync(apiVersion, xApiVersion)
            //result shouldBe ("TODO")
        }

        // to test getCurrentUserEnrollmentsExtendedAsync
        should("test getCurrentUserEnrollmentsExtendedAsync") {
            // uncomment below to test getCurrentUserEnrollmentsExtendedAsync
            //val apiVersion : kotlin.String = apiVersion_example // kotlin.String | 
            //val xApiVersion : kotlin.String = xApiVersion_example // kotlin.String | 
            //val result : ExtendedTenantEnrolmentDtoListEnvelope = apiInstance.getCurrentUserEnrollmentsExtendedAsync(apiVersion, xApiVersion)
            //result shouldBe ("TODO")
        }

        // to test getCurrentUserFollowersAsync
        should("test getCurrentUserFollowersAsync") {
            // uncomment below to test getCurrentUserFollowersAsync
            //val apiVersion : kotlin.String = apiVersion_example // kotlin.String | 
            //val xApiVersion : kotlin.String = xApiVersion_example // kotlin.String | 
            //val result : FollowRecordDtoListEnvelope = apiInstance.getCurrentUserFollowersAsync(apiVersion, xApiVersion)
            //result shouldBe ("TODO")
        }

        // to test getCurrentUserFollowsAsync
        should("test getCurrentUserFollowsAsync") {
            // uncomment below to test getCurrentUserFollowsAsync
            //val apiVersion : kotlin.String = apiVersion_example // kotlin.String | 
            //val xApiVersion : kotlin.String = xApiVersion_example // kotlin.String | 
            //val result : FollowRecordDtoListEnvelope = apiInstance.getCurrentUserFollowsAsync(apiVersion, xApiVersion)
            //result shouldBe ("TODO")
        }

        // to test getCurrentUserInvitationAsync
        should("test getCurrentUserInvitationAsync") {
            // uncomment below to test getCurrentUserInvitationAsync
            //val apiVersion : kotlin.String = apiVersion_example // kotlin.String | 
            //val xApiVersion : kotlin.String = xApiVersion_example // kotlin.String | 
            //val result : TenantInvitationDtoListEnvelope = apiInstance.getCurrentUserInvitationAsync(apiVersion, xApiVersion)
            //result shouldBe ("TODO")
        }

        // to test getCurrentUserNotificationsAsync
        should("test getCurrentUserNotificationsAsync") {
            // uncomment below to test getCurrentUserNotificationsAsync
            //val apiVersion : kotlin.String = apiVersion_example // kotlin.String | 
            //val xApiVersion : kotlin.String = xApiVersion_example // kotlin.String | 
            //val result : NotificationDtoListEnvelope = apiInstance.getCurrentUserNotificationsAsync(apiVersion, xApiVersion)
            //result shouldBe ("TODO")
        }

        // to test getCurrentUserSettingsAsync
        should("test getCurrentUserSettingsAsync") {
            // uncomment below to test getCurrentUserSettingsAsync
            //val apiVersion : kotlin.String = apiVersion_example // kotlin.String | 
            //val xApiVersion : kotlin.String = xApiVersion_example // kotlin.String | 
            //val result : UserSettingsDtoEnvelope = apiInstance.getCurrentUserSettingsAsync(apiVersion, xApiVersion)
            //result shouldBe ("TODO")
        }

        // to test getCurrentUserSocialProfileAsync
        should("test getCurrentUserSocialProfileAsync") {
            // uncomment below to test getCurrentUserSocialProfileAsync
            //val apiVersion : kotlin.String = apiVersion_example // kotlin.String | 
            //val xApiVersion : kotlin.String = xApiVersion_example // kotlin.String | 
            //val result : SocialProfileDtoEnvelope = apiInstance.getCurrentUserSocialProfileAsync(apiVersion, xApiVersion)
            //result shouldBe ("TODO")
        }

        // to test getCurrentUserTenantsAsync
        should("test getCurrentUserTenantsAsync") {
            // uncomment below to test getCurrentUserTenantsAsync
            //val apiVersion : kotlin.String = apiVersion_example // kotlin.String | 
            //val xApiVersion : kotlin.String = xApiVersion_example // kotlin.String | 
            //val result : TenantDtoListEnvelope = apiInstance.getCurrentUserTenantsAsync(apiVersion, xApiVersion)
            //result shouldBe ("TODO")
        }

        // to test getCurrentUserTenantsExtendedAsync
        should("test getCurrentUserTenantsExtendedAsync") {
            // uncomment below to test getCurrentUserTenantsExtendedAsync
            //val apiVersion : kotlin.String = apiVersion_example // kotlin.String | 
            //val xApiVersion : kotlin.String = xApiVersion_example // kotlin.String | 
            //val result : ExtendedTenantDtoListEnvelope = apiInstance.getCurrentUserTenantsExtendedAsync(apiVersion, xApiVersion)
            //result shouldBe ("TODO")
        }

        // to test getCurrentUserWalletAsync
        should("test getCurrentUserWalletAsync") {
            // uncomment below to test getCurrentUserWalletAsync
            //val apiVersion : kotlin.String = apiVersion_example // kotlin.String | 
            //val xApiVersion : kotlin.String = xApiVersion_example // kotlin.String | 
            //val result : WalletDtoEnvelope = apiInstance.getCurrentUserWalletAsync(apiVersion, xApiVersion)
            //result shouldBe ("TODO")
        }

        // to test getExtendedCurrentUserAsync
        should("test getExtendedCurrentUserAsync") {
            // uncomment below to test getExtendedCurrentUserAsync
            //val apiVersion : kotlin.String = apiVersion_example // kotlin.String | 
            //val xApiVersion : kotlin.String = xApiVersion_example // kotlin.String | 
            //val result : ExtendedUserDtoEnvelope = apiInstance.getExtendedCurrentUserAsync(apiVersion, xApiVersion)
            //result shouldBe ("TODO")
        }

        // to test getTenantEnrollmentAsync
        should("test getTenantEnrollmentAsync") {
            // uncomment below to test getTenantEnrollmentAsync
            //val enrollmentId : kotlin.String = enrollmentId_example // kotlin.String | 
            //val apiVersion : kotlin.String = apiVersion_example // kotlin.String | 
            //val xApiVersion : kotlin.String = xApiVersion_example // kotlin.String | 
            //val body : kotlin.Any = Object // kotlin.Any | 
            //val result : TenantEnrolmentDtoEnvelope = apiInstance.getTenantEnrollmentAsync(enrollmentId, apiVersion, xApiVersion, body)
            //result shouldBe ("TODO")
        }

        // to test patchCurrentUserAsync
        should("test patchCurrentUserAsync") {
            // uncomment below to test patchCurrentUserAsync
            //val apiVersion : kotlin.String = apiVersion_example // kotlin.String | 
            //val xApiVersion : kotlin.String = xApiVersion_example // kotlin.String | 
            //val operation : kotlin.collections.List<Operation> =  // kotlin.collections.List<Operation> | 
            //val result : EmptyEnvelope = apiInstance.patchCurrentUserAsync(apiVersion, xApiVersion, operation)
            //result shouldBe ("TODO")
        }

        // to test updateAvatarAsync
        should("test updateAvatarAsync") {
            // uncomment below to test updateAvatarAsync
            //val apiVersion : kotlin.String = apiVersion_example // kotlin.String | 
            //val xApiVersion : kotlin.String = xApiVersion_example // kotlin.String | 
            //val avatar : java.io.File = BINARY_DATA_HERE // java.io.File | 
            //val result : EmptyEnvelope = apiInstance.updateAvatarAsync(apiVersion, xApiVersion, avatar)
            //result shouldBe ("TODO")
        }

        // to test updateCurrentUserAsync
        should("test updateCurrentUserAsync") {
            // uncomment below to test updateCurrentUserAsync
            //val apiVersion : kotlin.String = apiVersion_example // kotlin.String | 
            //val xApiVersion : kotlin.String = xApiVersion_example // kotlin.String | 
            //val userUpdateDto : UserUpdateDto =  // UserUpdateDto | 
            //val result : EmptyEnvelope = apiInstance.updateCurrentUserAsync(apiVersion, xApiVersion, userUpdateDto)
            //result shouldBe ("TODO")
        }

        // to test updateCurrentUserSettingsAsync
        should("test updateCurrentUserSettingsAsync") {
            // uncomment below to test updateCurrentUserSettingsAsync
            //val apiVersion : kotlin.String = apiVersion_example // kotlin.String | 
            //val xApiVersion : kotlin.String = xApiVersion_example // kotlin.String | 
            //val userSettingsUpdateDto : UserSettingsUpdateDto =  // UserSettingsUpdateDto | 
            //val result : UserSettingsDtoEnvelope = apiInstance.updateCurrentUserSettingsAsync(apiVersion, xApiVersion, userSettingsUpdateDto)
            //result shouldBe ("TODO")
        }

    }
}

/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.SocialProfileDto

class SocialProfileDtoTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of SocialProfileDto
        //val modelInstance = SocialProfileDto()

        // to test the property `id`
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `timestamp`
        should("test timestamp") {
            // uncomment below to test the property
            //modelInstance.timestamp shouldBe ("TODO")
        }

        // to test the property `name`
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `about`
        should("test about") {
            // uncomment below to test the property
            //modelInstance.about shouldBe ("TODO")
        }

        // to test the property `cover`
        should("test cover") {
            // uncomment below to test the property
            //modelInstance.cover shouldBe ("TODO")
        }

        // to test the property `avatar`
        should("test avatar") {
            // uncomment below to test the property
            //modelInstance.avatar shouldBe ("TODO")
        }

        // to test the property `countryId`
        should("test countryId") {
            // uncomment below to test the property
            //modelInstance.countryId shouldBe ("TODO")
        }

        // to test the property `countryName`
        should("test countryName") {
            // uncomment below to test the property
            //modelInstance.countryName shouldBe ("TODO")
        }

        // to test the property `identityId`
        should("test identityId") {
            // uncomment below to test the property
            //modelInstance.identityId shouldBe ("TODO")
        }

        // to test the property `followsCount`
        should("test followsCount") {
            // uncomment below to test the property
            //modelInstance.followsCount shouldBe ("TODO")
        }

        // to test the property `messagesCount`
        should("test messagesCount") {
            // uncomment below to test the property
            //modelInstance.messagesCount shouldBe ("TODO")
        }

        // to test the property `followersCount`
        should("test followersCount") {
            // uncomment below to test the property
            //modelInstance.followersCount shouldBe ("TODO")
        }

        // to test the property `notificationsCount`
        should("test notificationsCount") {
            // uncomment below to test the property
            //modelInstance.notificationsCount shouldBe ("TODO")
        }

        // to test the property `unreadNotificationsCount`
        should("test unreadNotificationsCount") {
            // uncomment below to test the property
            //modelInstance.unreadNotificationsCount shouldBe ("TODO")
        }

        // to test the property `unreadMessagesCount`
        should("test unreadMessagesCount") {
            // uncomment below to test the property
            //modelInstance.unreadMessagesCount shouldBe ("TODO")
        }

        // to test the property `type`
        should("test type") {
            // uncomment below to test the property
            //modelInstance.type shouldBe ("TODO")
        }

        // to test the property `socialFeedId`
        should("test socialFeedId") {
            // uncomment below to test the property
            //modelInstance.socialFeedId shouldBe ("TODO")
        }

        // to test the property `twitterUrl`
        should("test twitterUrl") {
            // uncomment below to test the property
            //modelInstance.twitterUrl shouldBe ("TODO")
        }

        // to test the property `facebookURL`
        should("test facebookURL") {
            // uncomment below to test the property
            //modelInstance.facebookURL shouldBe ("TODO")
        }

        // to test the property `linkedInURL`
        should("test linkedInURL") {
            // uncomment below to test the property
            //modelInstance.linkedInURL shouldBe ("TODO")
        }

        // to test the property `youtubeURL`
        should("test youtubeURL") {
            // uncomment below to test the property
            //modelInstance.youtubeURL shouldBe ("TODO")
        }

        // to test the property `githubURL`
        should("test githubURL") {
            // uncomment below to test the property
            //modelInstance.githubURL shouldBe ("TODO")
        }

        // to test the property `pinterestURL`
        should("test pinterestURL") {
            // uncomment below to test the property
            //modelInstance.pinterestURL shouldBe ("TODO")
        }

        // to test the property `dribbleURL`
        should("test dribbleURL") {
            // uncomment below to test the property
            //modelInstance.dribbleURL shouldBe ("TODO")
        }

        // to test the property `domain`
        should("test domain") {
            // uncomment below to test the property
            //modelInstance.domain shouldBe ("TODO")
        }

        // to test the property `notes`
        should("test notes") {
            // uncomment below to test the property
            //modelInstance.notes shouldBe ("TODO")
        }

    }
}
